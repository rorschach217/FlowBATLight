{"version":3,"sources":["meteor://ðŸ’»app/server/fixtures.coffee"],"names":["insertData","indexOf","share","fixtureIds","data","collection","_id","object","call","push","find","count","isNew","insert","loadFixtures","Meteor","settings","isLoadingFixtures","loadFixturesForCompleteSetup","loadFixturesForIncompleteSetup","configs","executingInterval","ipsets","lastWeek","now","queries","query","user","users","usersInserted","Date","getTime","Default","isSetupComplete","isSSH","host","port","identityFile","siteConfigFile","dataRootdir","dataTempdir","Configs","ChrisSanders","profile","name","group","DenisGorbachev","_","defaults","emails","address","toLowerCase","verified","services","resume","loginTokens","Accounts","_hashLoginToken","createdAt","setPassword","Dashboard1","cmd","exclusionsCmd","sportEnabled","sport","ownerId","RwstatsTest","interface","output","rwstatsFields","rwstatsValues","RwcountTest","rwcountBinSizeEnabled","rwcountBinSize","rwcountLoadSchemeEnabled","rwcountLoadScheme","extend","startDateEnabled","startDate","Queries","findOne","update","$set","isOutputStale","minute","Local","note","contents","DNS","IPSets"],"mappings":";;;;;;;;;AAAA,IAAAA,UAAA;AAAA,IAAAC,OAAA,MAAAA,OAAA;AAAAC,KAAK,CAACC,UAAN,GAAmB,EAAnB;;AAEAH,UAAA,GAAa,UAACI,IAAD,EAAOC,UAAP;AACX,MAAAC,GAAA,EAAAC,MAAA;;AAAA,OAAAD,GAAA,IAAAF,IAAA;AAKE,QALmBH,OAAA,CAAAO,IAAA,CAAWN,KAAK,CAACC,UAAjB,EAAAG,GAAA,KAKnB,EALmB;AACnBJ,WAAK,CAACC,UAAN,CAAiBM,IAAjB,CAAsBH,GAAtB;AAMC;AAPH;;AAEA,MAAGD,UAAU,CAACK,IAAX,GAAkBC,KAAlB,OAA6B,CAAhC;AACE,SAAAL,GAAA,IAAAF,IAAA;AAQEG,YAAM,GAAGH,IAAI,CAACE,GAAD,CAAb;AAPAC,YAAM,CAACD,GAAP,GAAaA,GAAb;AACAC,YAAM,CAACK,KAAP,GAAe,KAAf;AACAP,gBAAU,CAACQ,MAAX,CAAkBN,MAAlB;AAHF;;AAIA,WAAO,IAAP;AAUD;AAlBU,CAAb;;AAUAL,KAAK,CAACY,YAAN,GAAqB;AACnB,MAAGC,MAAM,CAACC,QAAP,CAAgBC,iBAAnB;AAYE,WAXAf,KAAK,CAACgB,4BAAN,EAWA;AAZF;AAcE,WAXAhB,KAAK,CAACiB,8BAAN,EAWA;AACD;AAhBkB,CAArB;;AAMAjB,KAAK,CAACgB,4BAAN,GAAqC;AACnC,MAAAZ,GAAA,EAAAc,OAAA,EAAAC,iBAAA,EAAAC,MAAA,EAAAC,QAAA,EAAAC,GAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,aAAA;;AAAAL,KAAA,GAAM,IAAIM,IAAJ,EAAN;AACAP,UAAA,GAAW,IAAIO,IAAJ,CAASN,GAAG,CAACO,OAAJ,KAAgB,IAAI,EAAJ,GAAS,IAAT,GAAgB,IAAzC,CAAX;AAEAX,SAAA,GACE;AAAAY,WAAA,EACE;AAAAC,qBAAA,EAAiB,IAAjB;AACAC,WAAA,EAAO,IADP;AAEAC,UAAA,EAAM,eAFN;AAGAC,UAAA,EAAM,IAHN;AAIAT,UAAA,EAAM,OAJN;AAKAU,kBAAA,EAAc,EALd;AAMAC,oBAAA,EAAgB,0BANhB;AAOAC,iBAAA,EAAa,OAPb;AAQAC,iBAAA,EAAa;AARb;AADF,GADF;AAWAxC,YAAA,CAAWoB,OAAX,EAAoBlB,KAAK,CAACuC,OAA1B;AAEAb,OAAA,GACE;AAAAc,gBAAA,EACE;AAAAC,aAAA,EACE;AAAAC,YAAA,EAAM;AAAN,OADF;AAiBA;AAdAC,WAAA,EAAO;AAHP,KADF;AAKAC,kBAAA,EACE;AAAAH,aAAA,EACE;AAAAC,YAAA,EAAM;AAAN,OADF;AAmBA;AAhBAC,WAAA,EAAO;AAHP;AANF,GADF;;AAWA,OAAAvC,GAAA,IAAAsB,KAAA;AAoBED,QAAI,GAAGC,KAAK,CAACtB,GAAD,CAAZ;;AAnBAyC,KAAC,CAACC,QAAF,CAAWrB,IAAX,EACE;AAAAsB,YAAA,EAAQ,CACN;AACEC,eAAA,EAAS5C,GAAG,CAAC6C,WAAJ,KAAoB,cAD/B;AAEEC,gBAAA,EAAU;AAFZ,OADM,CAAR;AAMAC,cAAA,EACE;AAAAC,cAAA,EACE;AAAAC,qBAAA,EAAa,CACX;AACE,2BAAeC,QAAQ,CAACC,eAAT,CAAyBnD,GAAzB,CADjB;AAEE,oBAAQkB;AAFV,WADW;AAAb;AADF,OAPF;AAcAkC,eAAA,EAAWnC;AAdX,KADF;AADF;;AAkBAM,eAAA,GAAgB7B,UAAA,CAAW4B,KAAX,EAAkBb,MAAM,CAACa,KAAzB,CAAhB;;AACA,MAAGC,aAAH;AACE,SAAAvB,GAAA,IAAAsB,KAAA;AAwBED,UAAI,GAAGC,KAAK,CAACtB,GAAD,CAAZ;AAvBAkD,cAAQ,CAACG,WAAT,CAAqBrD,GAArB,EAA0B,QAA1B;AAFJ;AA4BC;;AAxBDmB,SAAA,GACE;AAAAmC,cAAA,EACE;AAAAhB,UAAA,EAAM,iBAAN;AACAiB,SAAA,EAAK,mCADL;AAEAC,mBAAA,EAAe,oCAFf;AAGAC,kBAAA,EAAc,IAHd;AAIAC,WAAA,EAAO,IAJP;AAKAC,aAAA,EAAS;AALT,KADF;AAOAC,eAAA,EACE;AAAAtB,UAAA,EAAM,eAAN;AACAuB,eAAA,EAAW,SADX;AAEAN,SAAA,EAAK,mCAFL;AAGAE,kBAAA,EAAc,IAHd;AAIAC,WAAA,EAAO,IAJP;AAKAI,YAAA,EAAQ,SALR;AAMAC,mBAAA,EAAe,CAAC,KAAD,CANf;AAOAC,mBAAA,EAAe,CAAC,SAAD,EAAY,KAAZ,EAAmB,OAAnB,CAPf;AAQAL,aAAA,EAAS;AART,KARF;AAiBAM,eAAA,EACE;AAAA3B,UAAA,EAAM,eAAN;AACAuB,eAAA,EAAW,SADX;AAEAN,SAAA,EAAK,mCAFL;AAGAE,kBAAA,EAAc,IAHd;AAIAC,WAAA,EAAO,IAJP;AAKAI,YAAA,EAAQ,SALR;AAMAI,2BAAA,EAAuB,IANvB;AAOAC,oBAAA,EAAgB,IAPhB;AAQAC,8BAAA,EAA0B,IAR1B;AASAC,uBAAA,EAAmB,GATnB;AAUAV,aAAA,EAAS;AAVT;AAlBF,GADF;;AA8BA,OAAA3D,GAAA,IAAAmB,OAAA;AA8BEC,SAAK,GAAGD,OAAO,CAACnB,GAAD,CAAf;;AA7BAyC,KAAC,CAAC6B,MAAF,CAASlD,KAAT,EACE;AAAAmD,sBAAA,EAAkB,KAAlB;AACAC,eAAA,EAAW;AADX,KADF;AADF;;AAKA,OAAAxE,GAAA,IAAAmB,OAAA;AAgCE,QAhCsBxB,OAAA,CAAAO,IAAA,CAAWN,KAAK,CAACC,UAAjB,EAAAG,GAAA,KAgCtB,EAhCsB;AACtBJ,WAAK,CAACC,UAAN,CAAiBM,IAAjB,CAAsBH,GAAtB;AAiCC;AAlCH;;AAEA,MAAGJ,KAAK,CAAC6E,OAAN,CAAcrE,IAAd,GAAqBC,KAArB,OAAgC,CAAnC;AACE,SAAAL,GAAA,IAAAmB,OAAA;AAmCEC,WAAK,GAAGD,OAAO,CAACnB,GAAD,CAAf;AAlCAoB,WAAK,CAACpB,GAAN,GAAYA,GAAZ;AACAoB,WAAK,CAACd,KAAN,GAAc,KAAd;AACAN,SAAA,GAAMJ,KAAK,CAAC6E,OAAN,CAAclE,MAAd,CAAqBa,KAArB,CAAN;AACAA,WAAA,GAAQxB,KAAK,CAAC6E,OAAN,CAAcC,OAAd,CAAsB1E,GAAtB,CAAR;AACAJ,WAAK,CAAC6E,OAAN,CAAcE,MAAd,CAAqB3E,GAArB,EAA0B;AAAC4E,YAAA,EAAM;AAACC,uBAAA,EAAe;AAAhB;AAAP,OAA1B;AALF;;AAMA9D,qBAAA,GAAoB,IAAInB,KAAK,CAACkF,MAA9B,CAPF,CAgDE;;AAvCAlF,SAAK,CAAC6E,OAAN,CAAcE,MAAd,CAAqB,YAArB,EAAmC;AAACC,UAAA,EAAM;AAAC7D,yBAAA,EAAmBA;AAApB;AAAP,KAAnC;AACAN,UAAM,CAACa,KAAP,CAAaqD,MAAb,CAAoB,cAApB,EAAoC;AAACC,UAAA,EAAM;AAAC,qCAA6B,CAAC,YAAD;AAA9B;AAAP,KAApC;AAiDD;;AA/CD5D,QAAA,GACE;AAAA+D,SAAA,EACE;AAAAzC,UAAA,EAAM,iBAAN;AACA0C,UAAA,EAAM,2BADN;AAEAC,cAAA,EAAU,uCAFV;AAOAtB,aAAA,EAAS;AAPT,KADF;AASAuB,OAAA,EACE;AAAA5C,UAAA,EAAM,eAAN;AACA0C,UAAA,EAAM,sBADN;AAEAC,cAAA,EAAU,kDAFV;AAQAtB,aAAA,EAAS;AART;AAVF,GADF;AA8DA,SA1CAjE,UAAA,CAAWsB,MAAX,EAAmBpB,KAAK,CAACuF,MAAzB,CA0CA;AAlKmC,CAArC,C,CAqKA;AACA;;;AAxCAvF,KAAK,CAACiB,8BAAN,GAAuC;AACrC,MAAAC,OAAA;AAAAA,SAAA,GACE;AAAAY,WAAA,EACE;AAAAC,qBAAA,EAAiB;AAAjB;AADF,GADF;AA+CA,SA5CAjC,UAAA,CAAWoB,OAAX,EAAoBlB,KAAK,CAACuC,OAA1B,CA4CA;AAhDqC,CAAvC,C","file":"/server/fixtures.coffee","sourcesContent":["share.fixtureIds = []\n\ninsertData = (data, collection) ->\n  for _id of data when _id not in share.fixtureIds\n    share.fixtureIds.push(_id)\n  if collection.find().count() is 0\n    for _id, object of data\n      object._id = _id\n      object.isNew = false\n      collection.insert(object)\n    return true\n\nshare.loadFixtures = ->\n  if Meteor.settings.isLoadingFixtures\n    share.loadFixturesForCompleteSetup()\n  else\n    share.loadFixturesForIncompleteSetup()\n\nshare.loadFixturesForCompleteSetup = ->\n  now = new Date()\n  lastWeek = new Date(now.getTime() - 7 * 24 * 3600 * 1000)\n\n  configs =\n    Default:\n      isSetupComplete: true\n      isSSH: true\n      host: \"50.116.29.253\"\n      port: \"22\"\n      user: \"denis\"\n      identityFile: \"\"\n      siteConfigFile: \"/usr/local/etc/silk.conf\"\n      dataRootdir: \"/data\"\n      dataTempdir: \"/tmp\"\n  insertData(configs, share.Configs)\n\n  users =\n    ChrisSanders:\n      profile:\n        name: \"Chris Sanders\"\n#        timezone: 240 # US, Charleston\n      group: \"admin\"\n    DenisGorbachev:\n      profile:\n        name: \"Denis Gorbachev\"\n#        timezone: -240 # Russia, Moscow\n      group: \"admin\"\n  for _id, user of users\n    _.defaults(user,\n      emails: [\n        {\n          address: _id.toLowerCase() + \"@flowbat.com\"\n          verified: true\n        }\n      ]\n      services:\n        resume:\n          loginTokens: [\n            {\n              \"hashedToken\": Accounts._hashLoginToken(_id),\n              \"when\": now\n            }\n          ]\n      createdAt: lastWeek\n    )\n  usersInserted = insertData(users, Meteor.users)\n  if usersInserted\n    for _id, user of users\n      Accounts.setPassword(_id, \"123123\")\n\n  queries =\n    Dashboard1:\n      name: \"Dashboard query\"\n      cmd: \"--sensor=S0 --type=all --sport=80\"\n      exclusionsCmd: \"--daddress=192.168.0.1 OR --scc=au\"\n      sportEnabled: true\n      sport: \"80\"\n      ownerId: \"ChrisSanders\"\n    RwstatsTest:\n      name: \"Rwstats query\"\n      interface: \"builder\"\n      cmd: \"--sensor=S0 --type=all --sport=80\"\n      sportEnabled: true\n      sport: \"80\"\n      output: \"rwstats\"\n      rwstatsFields: [\"sIP\"]\n      rwstatsValues: [\"Records\", \"dIP\", \"dPort\"]\n      ownerId: \"ChrisSanders\"\n    RwcountTest:\n      name: \"Rwcount query\"\n      interface: \"builder\"\n      cmd: \"--sensor=S0 --type=all --sport=80\"\n      sportEnabled: true\n      sport: \"80\"\n      output: \"rwcount\"\n      rwcountBinSizeEnabled: true\n      rwcountBinSize: \"10\"\n      rwcountLoadSchemeEnabled: true\n      rwcountLoadScheme: \"0\"\n      ownerId: \"ChrisSanders\"\n  for _id, query of queries\n    _.extend(query,\n      startDateEnabled: false\n      startDate: \"\"\n    )\n  for _id of queries when _id not in share.fixtureIds\n    share.fixtureIds.push(_id)\n  if share.Queries.find().count() is 0\n    for _id, query of queries\n      query._id = _id\n      query.isNew = false\n      _id = share.Queries.insert(query)\n      query = share.Queries.findOne(_id)\n      share.Queries.update(_id, {$set: {isOutputStale: true}})\n    executingInterval = 5 * share.minute\n#    executingInterval /= 5 * 12 # debug\n    share.Queries.update(\"Dashboard1\", {$set: {executingInterval: executingInterval}})\n    Meteor.users.update(\"ChrisSanders\", {$set: {\"profile.dashboardQueryIds\": [\"Dashboard1\"]}})\n\n  ipsets =\n    Local:\n      name: \"Local addresses\"\n      note: \"John asked to create this\"\n      contents: \"\"\"\n        192.168.0.1\n        192.168.0.2\n        192.168.0.3\n      \"\"\"\n      ownerId: \"ChrisSanders\"\n    DNS:\n      name: \"DNS addresses\"\n      note: \"For testing purposes\"\n      contents: \"\"\"\n        8.8.8.8\n        8.8.4.4\n        208.67.222.222\n        208.67.220.220\n      \"\"\"\n      ownerId: \"ChrisSanders\"\n  insertData(ipsets, share.IPSets)\n\n\n#  serviceConfigurations = {}\n#  insertData(serviceConfigurations, ServiceConfiguration.configurations)\n\nshare.loadFixturesForIncompleteSetup = ->\n  configs =\n    Default:\n      isSetupComplete: false\n  insertData(configs, share.Configs)\n"]}