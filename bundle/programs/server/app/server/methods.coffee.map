{"version":3,"sources":["meteor://ðŸ’»app/server/methods.coffee"],"names":["share","getMailDomail","matches","process","env","MAIL_URL","match","Meteor","methods","setPassword","userId","password","check","String","Security","hasRole","_debug","Accounts","addNewUser","newUser","config","user","email","Match","App","Email","name","group","InArray","groups","toLowerCase","Configs","findOne","isSetupComplete","createUser","profile","users","update","$set","send","from","root","i18n","t","to","subject","Handlebars","templates","settings","trim","html"],"mappings":"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","file":"/server/methods.coffee","sourcesContent":["share.getMailDomail = ->\n  if process.env.MAIL_URL\n    matches = process.env.MAIL_URL.match(/\\/\\/(.+)%40(.+):(.+)@(.+):(\\d+)/)\n    return matches[2]\n  return \"\"\n\nMeteor.methods\n  setPassword: (userId, password) ->\n    check(userId, String)\n    check(password, String)\n    unless userId is @userId or share.Security.hasRole(@userId, \"admin\")\n      Meteor._debug(\"Setting password is not allowed for non admins\")\n      return\n    Accounts.setPassword(userId, password)\n  addNewUser: (newUser) ->\n    check newUser,\n      email: Match.App.Email\n      name: String\n      password: String\n      group: Match.App.InArray(share.Security.groups())\n    newUser.email = newUser.email.toLowerCase()\n    if @userId\n      if not share.Security.hasRole(@userId, \"admin\")\n        Meteor._debug(\"Creating users is not allowed for non admins\")\n        return\n    else\n      config = share.Configs.findOne()\n      if config.isSetupComplete\n        Meteor._debug(\"Creating users is not allowed for non admins\")\n        return\n      else\n        newUser.group = \"admin\"\n    userId = Accounts.createUser\n      email: newUser.email\n      password: newUser.password\n      profile:\n        name: newUser.name\n    Meteor.users.update(userId, {$set: {group: newUser.group}})\n    user = Meteor.users.findOne(userId)\n    Email.send\n      from: '\"' + root.i18n.t(\"messages.postman\") + ' (FlowBAT)\" <herald@' + share.getMailDomail() + '>'\n      to: newUser.email\n      subject: Handlebars.templates[\"newUserSubject\"](user: user, settings: Meteor.settings).trim()\n      html: Handlebars.templates[\"newUserHtml\"](user: user, email: newUser.email, password: newUser.password, settings: Meteor.settings).trim()\n    userId\n"]}