{"version":3,"sources":["meteor://ðŸ’»app/server/model/publications.coffee"],"names":["Meteor","publish","userId","users","find","_id","fields","share","Security","hasRole","config","Configs","findOne","isSetupComplete","Queries","ownerId","IPSets","Tuples"],"mappings":";;;;;;;;;AAAA;AACA;AAEAA,MAAM,CAACC,OAAP,CAAe,aAAf,EAA8B;AAC5B,MAAG,CAAI,KAACC,MAAR;AAAoB,WAAO,EAAP;AACnB;;AACD,SADAF,MAAM,CAACG,KAAP,CAAaC,IAAb,CAAkB;AAACC,OAAA,EAAK,KAACH;AAAP,GAAlB,EACE;AAAAI,UAAA,EACE;AAAA,eAAS,CAAT;AACA,gBAAU,CADV;AAEA,iBAAW,CAFX;AAGA,gBAAU,CAHV;AAIA,mBAAa;AAJb;AADF,GADF,CACA;AAHF;AAWAN,MAAM,CAACC,OAAP,CAAe,OAAf,EAAwB;AACtB,MAAG,CAAI,KAACC,MAAR;AAAoB,WAAO,EAAP;AAOnB;;AAND,MAAGK,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuB,KAACP,MAAxB,EAAgC,OAAhC,CAAH;AAQE,WAPAF,MAAM,CAACG,KAAP,CAAaC,IAAb,CAAkB,EAAlB,EACE;AAAAE,YAAA,EACE;AAAA,iBAAS,CAAT;AACA,kBAAU,CADV;AAEA,mBAAW,CAFX;AAGA,kBAAU,CAHV;AAIA,qBAAa;AAJb;AADF,KADF,CAOA;AARF;AAkBE,WARA,EAQA;AACD;AArBH;AAcAN,MAAM,CAACC,OAAP,CAAe,SAAf,EAA0B;AACxB,MAAAS,MAAA;;AAAA,MAAG,CAAI,KAACR,MAAR;AACEQ,UAAA,GAASH,KAAK,CAACI,OAAN,CAAcC,OAAd,EAAT;;AACA,QAAGF,MAAA,IAAW,CAAIA,MAAM,CAACG,eAAzB;AACE,aAAON,KAAK,CAACI,OAAN,CAAcP,IAAd,EAAP;AAYD;;AAXD,WAAO,EAAP;AAaD;;AAZD,MAAGG,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuB,KAACP,MAAxB,EAAgC,OAAhC,CAAH;AACE,WAAOK,KAAK,CAACI,OAAN,CAAcP,IAAd,EAAP;AADF;AAGE,WAAO,EAAP;AAcD;AAvBH;AAWAJ,MAAM,CAACC,OAAP,CAAe,SAAf,EAA0B;AACxB,MAAG,CAAI,KAACC,MAAR;AAAoB,WAAO,EAAP;AAiBnB;;AACD,SAjBAK,KAAK,CAACO,OAAN,CAAcV,IAAd,CAAmB;AAACW,WAAA,EAAS,KAACb;AAAX,GAAnB,CAiBA;AAnBF;AAIAF,MAAM,CAACC,OAAP,CAAe,QAAf,EAAyB;AACvB,MAAG,CAAI,KAACC,MAAR;AAAoB,WAAO,EAAP;AAsBnB;;AACD,SAtBAK,KAAK,CAACS,MAAN,CAAaZ,IAAb,CAAkB;AAACW,WAAA,EAAS,KAACb;AAAX,GAAlB,CAsBA;AAxBF;AAIAF,MAAM,CAACC,OAAP,CAAe,QAAf,EAAyB;AACvB,MAAG,CAAI,KAACC,MAAR;AAAoB,WAAO,EAAP;AA2BnB;;AACD,SA3BAK,KAAK,CAACU,MAAN,CAAab,IAAb,CAAkB;AAACW,WAAA,EAAS,KAACb;AAAX,GAAlB,CA2BA;AA7BF,G","file":"/server/model/publications.coffee","sourcesContent":["#Meteor.publish \"loginServiceConfigurationData\", () ->\n#  Accounts.loginServiceConfiguration.find({})\n\nMeteor.publish \"currentUser\", () ->\n  if not @userId then return []\n  Meteor.users.find({_id: @userId},\n    fields:\n      \"group\": 1\n      \"emails\": 1\n      \"profile\": 1\n      \"status\": 1\n      \"createdAt\": 1\n  )\n\nMeteor.publish \"users\", ->\n  if not @userId then return []\n  if share.Security.hasRole(@userId, \"admin\")\n    Meteor.users.find({},\n      fields:\n        \"group\": 1\n        \"emails\": 1\n        \"profile\": 1\n        \"status\": 1\n        \"createdAt\": 1\n    )\n  else\n    []\n\nMeteor.publish \"configs\", ->\n  if not @userId\n    config = share.Configs.findOne()\n    if config and not config.isSetupComplete\n      return share.Configs.find()\n    return []\n  if share.Security.hasRole(@userId, \"admin\")\n    return share.Configs.find()\n  else\n    return []\n\nMeteor.publish \"queries\", ->\n  if not @userId then return []\n  share.Queries.find({ownerId: @userId})\n\nMeteor.publish \"ipsets\", ->\n  if not @userId then return []\n  share.IPSets.find({ownerId: @userId})\n\nMeteor.publish \"tuples\", ->\n  if not @userId then return []\n  share.Tuples.find({ownerId: @userId})\n"]}