{"version":3,"sources":["meteor://ðŸ’»app/server/execution.coffee"],"names":["Future","Process","executeQuery","fs","loadQueryResult","writeFile","Npm","require","wrap","share","Queries","after","update","userId","query","fieldNames","modifier","options","_","intersection","inputFields","length","_id","$set","isInputStale","callback","config","profile","isOutputStale","Configs","findOne","transform","Transformations","inputOptions","Meteor","users","ownerId","result","error","code","methods","checkConnection","fut","queryId","Match","Error","insert","interface","cmd","isQuick","unblock","throw","return","wait","loadDataForCSV","check","App","QueryId","startRecNum","numRecs","getRwfToken","token","Random","id","copyCommand","isSSH","getSSHOptions","port","user","host","dataTempdir","exec","bindEnvironment","err","stdout","stderr","trim","command","isIpsetStale","isTupleStale","rwsetbuildErrors","rwsetbuildFutures","tuplebuildErrors","tuplebuildFutures","each","field","rmCommand","rmFuture","rwsFilename","rwsetbuildFuture","scpCommand","scpFuture","set","txtFilename","writeFileFuture","IPSets","contents","push","wrapCommand","resolve","rwsetbuildCommand","join","tupleFilename","tuplebuildFuture","Tuples","tuplebuildCommand","inputCommand","indexOf","outputCommand"],"mappings":"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","file":"/server/execution.coffee","sourcesContent":["fs = Npm.require(\"fs\")\nProcess = Npm.require(\"child_process\")\nFuture = Npm.require('fibers/future')\nwriteFile = Future.wrap(fs.writeFile)\n\nshare.Queries.after.update (userId, query, fieldNames, modifier, options) ->\n  if _.intersection(fieldNames, share.inputFields).length\n    share.Queries.update(query._id, {$set: {isInputStale: true}})\n\nshare.Queries.after.update (userId, query, fieldNames, modifier, options) ->\n  if not query.isOutputStale\n    return\n  config = share.Configs.findOne({}, {transform: share.Transformations.config})\n  query = share.Transformations.query(query)\n  if not query.inputOptions(config)\n    share.Queries.update(query._id, {$set: {isInputStale: false, isOutputStale: false}})\n    return\n  profile = Meteor.users.findOne(query.ownerId).profile\n  callback = (result, error, code) ->\n    share.Queries.update(query._id, {$set: {result: result, error: error, code: code, isInputStale: false, isOutputStale: false}})\n  loadQueryResult(query, config, profile, callback)\n\nMeteor.methods\n  checkConnection: ->\n    unless @userId\n      throw new Match.Error(\"Operation not allowed for unauthorized users\")\n    queryId = share.Queries.insert({\n      interface: \"cmd\"\n      cmd: \"--protocol=0-255\"\n      isQuick: true\n    })\n    config = share.Configs.findOne({}, {transform: share.Transformations.config})\n    profile = Meteor.users.findOne(@userId).profile\n    query = share.Queries.findOne(queryId, {transform: share.Transformations.query})\n    @unblock()\n    fut = new Future()\n    callback = (result, error, code) ->\n      if error\n        fut.throw(new Meteor.Error(500, error))\n      else\n        fut.return(result)\n    executeQuery(query, config, profile, callback)\n    fut.wait()\n    # quick queries are cleaned up automatically\n  loadDataForCSV: (queryId) ->\n    check(queryId, Match.App.QueryId)\n    unless @userId\n      throw new Match.Error(\"Operation not allowed for unauthorized users\")\n    config = share.Configs.findOne({}, {transform: share.Transformations.config})\n    query = share.Queries.findOne(queryId, {transform: share.Transformations.query})\n    unless @userId is query.ownerId\n      throw new Match.Error(\"Operation not allowed for non-owners\")\n    @unblock()\n    fut = new Future()\n    callback = (result, error, code) ->\n      if error\n        fut.throw(new Error(error))\n      else\n        fut.return(result)\n    query.startRecNum = 1\n    loadQueryResult(query, config, {numRecs: 0}, callback)\n    fut.wait()\n  getRwfToken: (queryId) ->\n    check(queryId, Match.App.QueryId)\n    unless @userId\n      throw new Match.Error(\"Operation not allowed for unauthorized users\")\n    config = share.Configs.findOne({}, {transform: share.Transformations.config})\n    profile = Meteor.users.findOne(@userId).profile\n    query = share.Queries.findOne(queryId, {transform: share.Transformations.query})\n    unless @userId is query.ownerId\n      throw new Match.Error(\"Operation not allowed for non-owners\")\n    @unblock()\n    token = Random.id()\n    fut = new Future()\n    callback = (result, error, code) ->\n      if error\n        fut.throw(new Error(error))\n      else\n        if config.isSSH\n          copyCommand = \"scp \" + config.getSSHOptions() + \" -P \" + config.port + \" \" + config.user + \"@\" + config.host + \":\" + config.dataTempdir + \"/\" + query._id + \".rwf \" + \"/tmp\" + \"/\" + token + \".rwf\"\n        else\n          copyCommand = \"cp \" + config.dataTempdir + \"/\" + query._id + \".rwf \" + \"/tmp\" + \"/\" + token + \".rwf\"\n        Process.exec(copyCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n          result = stdout.trim()\n          error = stderr.trim()\n          code = if err then err.code else 0\n          if error\n            fut.throw(new Error(error))\n          else\n            fut.return(token)\n        ))\n    executeQuery(query, config, profile, callback)\n    fut.wait()\n\nexecuteQuery = (query, config, profile, callback) ->\n  rwsetbuildErrors = []\n  rwsetbuildFutures = []\n  isIpsetStale = false\n  _.each([\"dipSet\", \"sipSet\", \"anySet\"], (field) ->\n    if query[field + \"Enabled\"] and query[field]\n      set = share.IPSets.findOne(query[field])\n      if set.isOutputStale\n        isIpsetStale = true\n        rwsetbuildFuture = new Future()\n        txtFilename = \"/tmp\" + \"/\" + set._id + \".txt\"\n        rwsFilename = config.dataTempdir + \"/\" + set._id + \".rws\"\n        writeFileFuture = writeFile(txtFilename, set.contents)\n        if config.isSSH\n          scpCommand = \"scp \" + config.getSSHOptions() + \" -P \" + config.port + \" \" + txtFilename + \" \" + config.user + \"@\" + config.host + \":\" + txtFilename\n          scpFuture = new Future()\n          Process.exec(scpCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n            result = stdout.trim()\n            error = stderr.trim()\n            code = if err then err.code else 0\n            if error\n              rwsetbuildErrors.push(error)\n            if code is 0\n            else\n              if not error\n                throw \"scp: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n            scpFuture.return(result)\n          ))\n          scpFuture.wait()\n        rmCommand = \"rm -f \" + rwsFilename\n        if config.isSSH\n          rmCommand = config.wrapCommand(rmCommand)\n        rmFuture = new Future()\n        Process.exec(rmCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n          result = stdout.trim()\n          error = stderr.trim()\n          code = if err then err.code else 0\n          if error\n            rwsetbuildErrors.push(error)\n          if code is 0\n          else\n            if not error\n              throw \"rm: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n          rmFuture.return(result)\n        ))\n        rmFuture.wait()\n        writeFileFuture.resolve Meteor.bindEnvironment((err, result) ->\n          if err\n            rwsetbuildErrors.push(err)\n            rwsetbuildFuture.return(result)\n          else\n            rwsetbuildCommand = \"rwsetbuild \" + txtFilename + \" \" + rwsFilename\n            if config.isSSH\n              rwsetbuildCommand = config.wrapCommand(rwsetbuildCommand)\n            Process.exec(rwsetbuildCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n              result = stdout.trim()\n              error = stderr.trim()\n              code = if err then err.code else 0\n              if error\n                rwsetbuildErrors.push(error)\n              if code is 0\n                share.IPSets.update(set._id, {$set: {isOutputStale: false}})\n              else\n                if not error\n                  throw \"rwsetbuild: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n              rwsetbuildFuture.return(result)\n            ))\n        )\n        rwsetbuildFutures.push(rwsetbuildFuture)\n  )\n  Future.wait(rwsetbuildFutures)\n\n  if rwsetbuildErrors.length\n    callback(\"\", rwsetbuildErrors.join(\"\\n\"), 255)\n    return\n\n  if not query.isInputStale and not isIpsetStale\n    callback(\"\", \"\", 0)\n    return\n\n  tuplebuildErrors = []\n  tuplebuildFutures = []\n  isTupleStale = false\n  _.each([\"tupleFile\"], (field) ->\n    if query[field + \"Enabled\"] and query[field]\n      set = share.Tuples.findOne(query[field])\n      if set.isOutputStale\n        isTupleStale = true\n        tuplebuildFuture = new Future()\n        txtFilename = \"/tmp\" + \"/\" + set._id + \".txt\"\n        tupleFilename = config.dataTempdir + \"/\" + set._id + \".tuple\"\n        writeFileFuture = writeFile(txtFilename, set.contents)\n        if config.isSSH\n          scpCommand = \"scp \" + config.getSSHOptions() + \" -P \" + config.port + \" \" + txtFilename + \" \" + config.user + \"@\" + config.host + \":\" + txtFilename\n          scpFuture = new Future()\n          Process.exec(scpCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n            result = stdout.trim()\n            error = stderr.trim()\n            code = if err then err.code else 0\n            if error\n              tuplebuildErrors.push(error)\n            if code is 0\n            else\n              if not error\n                throw \"scp: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n            scpFuture.return(result)\n          ))\n          scpFuture.wait()\n        rmCommand = \"rm -f \" + tupleFilename\n        if config.isSSH\n          rmCommand = config.wrapCommand(rmCommand)\n        rmFuture = new Future()\n        Process.exec(rmCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n          result = stdout.trim()\n          error = stderr.trim()\n          code = if err then err.code else 0\n          if error\n            tuplebuildErrors.push(error)\n          if code is 0\n          else\n            if not error\n              throw \"rm: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n          rmFuture.return(result)\n        ))\n        rmFuture.wait()\n        writeFileFuture.resolve Meteor.bindEnvironment((err, result) ->\n          if err\n            tuplebuildErrors.push(err)\n            tuplebuildFuture.return(result)\n          else\n            tuplebuildCommand = \"cat \" + txtFilename + \" > \" + tupleFilename\n            if config.isSSH\n              tuplebuildCommand = config.wrapCommand(tuplebuildCommand)\n            Process.exec(tuplebuildCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n              result = stdout.trim()\n              error = stderr.trim()\n              code = if err then err.code else 0\n              if error\n                tuplebuildErrors.push(error)\n              if code is 0\n                share.Tuples.update(set._id, {$set: {isOutputStale: false}})\n              else\n                if not error\n                  throw \"tuplebuild: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n              tuplebuildFuture.return(result)\n            ))\n        )\n        tuplebuildFutures.push(tuplebuildFuture)\n  )\n  Future.wait(tuplebuildFutures)\n\n  if tuplebuildErrors.length\n    callback(\"\", tuplebuildErrors.join(\"\\n\"), 255)\n    return\n\n  if not query.isInputStale and not isTupleStale\n    callback(\"\", \"\", 0)\n    return\n\n  command = query.inputCommand(config, profile)\n  Process.exec(command, Meteor.bindEnvironment((err, stdout, stderr) ->\n    result = stdout.trim()\n    error = stderr.trim()\n    code = if err then err.code else 0\n    if error.indexOf(\"Rejected\") isnt -1\n      error = null\n    callback(result, error, code)\n  ))\n\nloadQueryResult = (query, config, profile, callback) ->\n  executeQuery(query, config, profile, Meteor.bindEnvironment((result, error, code) ->\n    if error\n      return callback(result, error, code)\n    command = query.outputCommand(config, profile)\n    Process.exec(command, Meteor.bindEnvironment((err, stdout, stderr) ->\n      result = stdout.trim()\n      error = stderr.trim()\n      code = if err then err.code else 0\n      if error.indexOf(\"Error opening file\") isnt -1\n        query.isInputStale = true\n        loadQueryResult(query, config, profile, callback)\n      else\n        callback(result, error, code)\n    ))\n  ))\n"]}