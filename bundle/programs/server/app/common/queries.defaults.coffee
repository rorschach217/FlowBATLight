(function(){

/////////////////////////////////////////////////////////////////////////
//                                                                     //
// common/queries.defaults.coffee                                      //
//                                                                     //
/////////////////////////////////////////////////////////////////////////
                                                                       //
__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;
var queryPreSave;

queryPreSave = function (userId, changes) {};

share.Queries.before.insert(function (userId, query) {
  var count, now, prefix, startDate;
  query._id = query._id || Random.id();
  now = new Date();
  startDate = moment.utc().format("YYYY/MM/DD:HH");

  _.defaults(query, {
    name: "",
    cmd: "",
    exclusionsCmd: "",
    startDateType: "interval",
    startDateOffsetEnabled: false,
    startDateOffset: "60",
    startDateEnabled: true,
    startDate: startDate,
    endDateEnabled: false,
    endDate: "",
    sensorEnabled: false,
    sensor: "",
    typesEnabled: false,
    types: [],
    daddressEnabled: false,
    daddress: "",
    saddressEnabled: false,
    saddress: "",
    anyAddressEnabled: false,
    anyAddress: "",
    dipSetEnabled: false,
    dipSet: null,
    sipSetEnabled: false,
    sipSet: null,
    anySetEnabled: false,
    anySet: null,
    tupleFileEnabled: false,
    tupleFile: null,
    tupleDirectionEnabled: false,
    tupleDirection: "",
    tupleDelimiterEnabled: false,
    tupleDelimiter: "",
    tupleFieldsEnabled: false,
    tupleFields: "",
    dportEnabled: false,
    dport: "",
    sportEnabled: false,
    sport: "",
    aportEnabled: false,
    aport: "",
    dccEnabled: false,
    dcc: [],
    sccEnabled: false,
    scc: [],
    protocolEnabled: true,
    protocol: "0-255",
    flagsAllEnabled: false,
    flagsAll: "",
    activeTimeEnabled: false,
    activeTime: "",
    additionalParametersEnabled: false,
    additionalParameters: "",
    additionalExclusionsCmdEnabled: false,
    additionalExclusionsCmd: "",
    fields: ["sIP", "dIP", "sPort", "dPort", "protocol", "packets", "bytes", "flags", "sTime", "duration", "eTime", "sensor"],
    fieldsOrder: _.clone(share.rwcutFields),
    rwstatsDirection: "top",
    rwstatsMode: "count",
    rwstatsCountModeValue: "10",
    rwstatsThresholdModeValue: "",
    rwstatsPercentageModeValue: "",
    rwstatsBinTimeEnabled: false,
    rwstatsBinTime: "60",
    rwstatsFields: [],
    rwstatsFieldsOrder: _.clone(share.rwcutFields),
    rwstatsValues: [],
    rwstatsValuesOrder: share.rwstatsValues.concat(share.rwcutFields),
    rwstatsPrimaryValue: "",
    rwstatsCmd: "",
    rwcountBinSizeEnabled: false,
    rwcountBinSize: "",
    rwcountLoadSchemeEnabled: false,
    rwcountLoadScheme: "",
    rwcountSkipZeroes: true,
    rwcountFields: _.clone(share.rwcountFields),
    rwcountCmd: "",
    interface: "cmd",
    output: "rwcut",
    presentation: "table",
    chartType: "LineChart",
    chartHeight: 400,
    expandedFieldsets: ["time"],
    executingInterval: 0,
    executingAt: null,
    isInputStale: false,
    isOutputStale: false,
    isUTC: true,
    isQuick: false,
    isNew: true,
    ownerId: userId,
    updatedAt: now,
    createdAt: now
  }, share.queryBlankValues, share.queryResetValues);

  if (!query.name) {
    prefix = "New query";
    count = share.Queries.find({
      name: {
        $regex: "^" + prefix,
        $options: "i"
      }
    }).count();
    query.name = prefix;

    if (count) {
      query.name += " (" + count + ")";
    }
  }

  return queryPreSave.call(this, userId, query);
});
share.Queries.before.update(function (userId, query, fieldNames, modifier, options) {
  var now;
  now = new Date();
  modifier.$set = modifier.$set || {};
  modifier.$set.updatedAt = modifier.$set.updatedAt || now;
  return queryPreSave.call(this, userId, modifier.$set);
});
share.queryBlankValues = {
  result: "",
  error: ""
};
share.queryResetValues = {
  startRecNum: 1,
  sortField: "",
  sortReverse: true,
  chartHiddenFields: []
};
/////////////////////////////////////////////////////////////////////////

}).call(this);

//# sourceURL=meteor://ðŸ’»app/app/common/queries.defaults.coffee
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGVvcjovL/CfkrthcHAvY29tbW9uL3F1ZXJpZXMuZGVmYXVsdHMuY29mZmVlIl0sIm5hbWVzIjpbInF1ZXJ5UHJlU2F2ZSIsInVzZXJJZCIsImNoYW5nZXMiLCJzaGFyZSIsIlF1ZXJpZXMiLCJiZWZvcmUiLCJpbnNlcnQiLCJxdWVyeSIsImNvdW50Iiwibm93IiwicHJlZml4Iiwic3RhcnREYXRlIiwiX2lkIiwiUmFuZG9tIiwiaWQiLCJEYXRlIiwibW9tZW50IiwidXRjIiwiZm9ybWF0IiwiXyIsImRlZmF1bHRzIiwibmFtZSIsImNtZCIsImV4Y2x1c2lvbnNDbWQiLCJzdGFydERhdGVUeXBlIiwic3RhcnREYXRlT2Zmc2V0RW5hYmxlZCIsInN0YXJ0RGF0ZU9mZnNldCIsInN0YXJ0RGF0ZUVuYWJsZWQiLCJlbmREYXRlRW5hYmxlZCIsImVuZERhdGUiLCJzZW5zb3JFbmFibGVkIiwic2Vuc29yIiwidHlwZXNFbmFibGVkIiwidHlwZXMiLCJkYWRkcmVzc0VuYWJsZWQiLCJkYWRkcmVzcyIsInNhZGRyZXNzRW5hYmxlZCIsInNhZGRyZXNzIiwiYW55QWRkcmVzc0VuYWJsZWQiLCJhbnlBZGRyZXNzIiwiZGlwU2V0RW5hYmxlZCIsImRpcFNldCIsInNpcFNldEVuYWJsZWQiLCJzaXBTZXQiLCJhbnlTZXRFbmFibGVkIiwiYW55U2V0IiwidHVwbGVGaWxlRW5hYmxlZCIsInR1cGxlRmlsZSIsInR1cGxlRGlyZWN0aW9uRW5hYmxlZCIsInR1cGxlRGlyZWN0aW9uIiwidHVwbGVEZWxpbWl0ZXJFbmFibGVkIiwidHVwbGVEZWxpbWl0ZXIiLCJ0dXBsZUZpZWxkc0VuYWJsZWQiLCJ0dXBsZUZpZWxkcyIsImRwb3J0RW5hYmxlZCIsImRwb3J0Iiwic3BvcnRFbmFibGVkIiwic3BvcnQiLCJhcG9ydEVuYWJsZWQiLCJhcG9ydCIsImRjY0VuYWJsZWQiLCJkY2MiLCJzY2NFbmFibGVkIiwic2NjIiwicHJvdG9jb2xFbmFibGVkIiwicHJvdG9jb2wiLCJmbGFnc0FsbEVuYWJsZWQiLCJmbGFnc0FsbCIsImFjdGl2ZVRpbWVFbmFibGVkIiwiYWN0aXZlVGltZSIsImFkZGl0aW9uYWxQYXJhbWV0ZXJzRW5hYmxlZCIsImFkZGl0aW9uYWxQYXJhbWV0ZXJzIiwiYWRkaXRpb25hbEV4Y2x1c2lvbnNDbWRFbmFibGVkIiwiYWRkaXRpb25hbEV4Y2x1c2lvbnNDbWQiLCJmaWVsZHMiLCJmaWVsZHNPcmRlciIsImNsb25lIiwicndjdXRGaWVsZHMiLCJyd3N0YXRzRGlyZWN0aW9uIiwicndzdGF0c01vZGUiLCJyd3N0YXRzQ291bnRNb2RlVmFsdWUiLCJyd3N0YXRzVGhyZXNob2xkTW9kZVZhbHVlIiwicndzdGF0c1BlcmNlbnRhZ2VNb2RlVmFsdWUiLCJyd3N0YXRzQmluVGltZUVuYWJsZWQiLCJyd3N0YXRzQmluVGltZSIsInJ3c3RhdHNGaWVsZHMiLCJyd3N0YXRzRmllbGRzT3JkZXIiLCJyd3N0YXRzVmFsdWVzIiwicndzdGF0c1ZhbHVlc09yZGVyIiwiY29uY2F0IiwicndzdGF0c1ByaW1hcnlWYWx1ZSIsInJ3c3RhdHNDbWQiLCJyd2NvdW50QmluU2l6ZUVuYWJsZWQiLCJyd2NvdW50QmluU2l6ZSIsInJ3Y291bnRMb2FkU2NoZW1lRW5hYmxlZCIsInJ3Y291bnRMb2FkU2NoZW1lIiwicndjb3VudFNraXBaZXJvZXMiLCJyd2NvdW50RmllbGRzIiwicndjb3VudENtZCIsImludGVyZmFjZSIsIm91dHB1dCIsInByZXNlbnRhdGlvbiIsImNoYXJ0VHlwZSIsImNoYXJ0SGVpZ2h0IiwiZXhwYW5kZWRGaWVsZHNldHMiLCJleGVjdXRpbmdJbnRlcnZhbCIsImV4ZWN1dGluZ0F0IiwiaXNJbnB1dFN0YWxlIiwiaXNPdXRwdXRTdGFsZSIsImlzVVRDIiwiaXNRdWljayIsImlzTmV3Iiwib3duZXJJZCIsInVwZGF0ZWRBdCIsImNyZWF0ZWRBdCIsInF1ZXJ5QmxhbmtWYWx1ZXMiLCJxdWVyeVJlc2V0VmFsdWVzIiwiZmluZCIsIiRyZWdleCIsIiRvcHRpb25zIiwiY2FsbCIsInVwZGF0ZSIsImZpZWxkTmFtZXMiLCJtb2RpZmllciIsIm9wdGlvbnMiLCIkc2V0IiwicmVzdWx0IiwiZXJyb3IiLCJzdGFydFJlY051bSIsInNvcnRGaWVsZCIsInNvcnRSZXZlcnNlIiwiY2hhcnRIaWRkZW5GaWVsZHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQUFBLFlBQUE7O0FBQUFBLFlBQUEsR0FBZSxVQUFDQyxNQUFELEVBQVNDLE9BQVQsSUFBZjs7QUFFQUMsS0FBSyxDQUFDQyxPQUFOLENBQWNDLE1BQWQsQ0FBcUJDLE1BQXJCLENBQTRCLFVBQUNMLE1BQUQsRUFBU00sS0FBVDtBQUMxQixNQUFBQyxLQUFBLEVBQUFDLEdBQUEsRUFBQUMsTUFBQSxFQUFBQyxTQUFBO0FBQUFKLE9BQUssQ0FBQ0ssR0FBTixHQUFZTCxLQUFLLENBQUNLLEdBQU4sSUFBYUMsTUFBTSxDQUFDQyxFQUFQLEVBQXpCO0FBQ0FMLEtBQUEsR0FBTSxJQUFJTSxJQUFKLEVBQU47QUFDQUosV0FBQSxHQUFZSyxNQUFNLENBQUNDLEdBQVAsR0FBYUMsTUFBYixDQUFvQixlQUFwQixDQUFaOztBQUNBQyxHQUFDLENBQUNDLFFBQUYsQ0FBV2IsS0FBWCxFQUNFO0FBQUFjLFFBQUEsRUFBTSxFQUFOO0FBQ0FDLE9BQUEsRUFBSyxFQURMO0FBRUFDLGlCQUFBLEVBQWUsRUFGZjtBQUdBQyxpQkFBQSxFQUFlLFVBSGY7QUFJQUMsMEJBQUEsRUFBd0IsS0FKeEI7QUFLQUMsbUJBQUEsRUFBaUIsSUFMakI7QUFNQUMsb0JBQUEsRUFBa0IsSUFObEI7QUFPQWhCLGFBQUEsRUFBV0EsU0FQWDtBQVFBaUIsa0JBQUEsRUFBZ0IsS0FSaEI7QUFTQUMsV0FBQSxFQUFTLEVBVFQ7QUFVQUMsaUJBQUEsRUFBZSxLQVZmO0FBV0FDLFVBQUEsRUFBUSxFQVhSO0FBWUFDLGdCQUFBLEVBQWMsS0FaZDtBQWFBQyxTQUFBLEVBQU8sRUFiUDtBQWNBQyxtQkFBQSxFQUFpQixLQWRqQjtBQWVBQyxZQUFBLEVBQVUsRUFmVjtB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Q0FBNEIsVUFBQ3hILE1BQUQsRUFBU00sS0FBVCxFQUFnQm1ILFVBQWhCLEVBQTRCQyxRQUE1QixFQUFzQ0MsT0FBdEM7QUFDMUIsTUFBQW5ILEdBQUE7QUFBQUEsS0FBQSxHQUFNLElBQUlNLElBQUosRUFBTjtBQUNBNEcsVUFBUSxDQUFDRSxJQUFULEdBQWdCRixRQUFRLENBQUNFLElBQVQsSUFBaUIsRUFBakM7QUFDQUYsVUFBUSxDQUFDRSxJQUFULENBQWNaLFNBQWQsR0FBMEJVLFFBQVEsQ0FBQ0UsSUFBVCxDQUFjWixTQUFkLElBQTJCeEcsR0FBckQ7QUFhQSxTQVpBVCxZQUFZLENBQUN3SCxJQUFiLENBQWtCLElBQWxCLEVBQXFCdkgsTUFBckIsRUFBNkIwSCxRQUFRLENBQUNFLElBQXRDLENBWUE7QUFoQkY7QUFNQTFILEtBQUssQ0FBQ2dILGdCQUFOLEdBQ0U7QUFBQVcsUUFBQSxFQUFRLEVBQVI7QUFDQUMsT0FBQSxFQUFPO0FBRFAsQ0FERjtBQUlBNUgsS0FBSyxDQUFDaUgsZ0JBQU4sR0FDRTtBQUFBWSxhQUFBLEVBQWEsQ0FBYjtBQUNBQyxXQUFBLEVBQVcsRUFEWDtBQUVBQyxhQUFBLEVBQWEsSUFGYjtBQUdBQyxtQkFBQSxFQUFtQjtBQUhuQixDQURGLEMiLCJmaWxlIjoiL2NvbW1vbi9xdWVyaWVzLmRlZmF1bHRzLmNvZmZlZSIsInNvdXJjZXNDb250ZW50IjpbInF1ZXJ5UHJlU2F2ZSA9ICh1c2VySWQsIGNoYW5nZXMpIC0+XG5cbnNoYXJlLlF1ZXJpZXMuYmVmb3JlLmluc2VydCAodXNlcklkLCBxdWVyeSkgLT5cbiAgcXVlcnkuX2lkID0gcXVlcnkuX2lkIHx8IFJhbmRvbS5pZCgpXG4gIG5vdyA9IG5ldyBEYXRlKClcbiAgc3RhcnREYXRlID0gbW9tZW50LnV0YygpLmZvcm1hdChcIllZWVkvTU0vREQ6SEhcIilcbiAgXy5kZWZhdWx0cyhxdWVyeSxcbiAgICBuYW1lOiBcIlwiXG4gICAgY21kOiBcIlwiXG4gICAgZXhjbHVzaW9uc0NtZDogXCJcIlxuICAgIHN0YXJ0RGF0ZVR5cGU6IFwiaW50ZXJ2YWxcIlxuICAgIHN0YXJ0RGF0ZU9mZnNldEVuYWJsZWQ6IGZhbHNlXG4gICAgc3RhcnREYXRlT2Zmc2V0OiBcIjYwXCJcbiAgICBzdGFydERhdGVFbmFibGVkOiB0cnVlXG4gICAgc3RhcnREYXRlOiBzdGFydERhdGVcbiAgICBlbmREYXRlRW5hYmxlZDogZmFsc2VcbiAgICBlbmREYXRlOiBcIlwiXG4gICAgc2Vuc29yRW5hYmxlZDogZmFsc2VcbiAgICBzZW5zb3I6IFwiXCJcbiAgICB0eXBlc0VuYWJsZWQ6IGZhbHNlXG4gICAgdHlwZXM6IFtdXG4gICAgZGFkZHJlc3NFbmFibGVkOiBmYWxzZVxuICAgIGRhZGRyZXNzOiBcIlwiXG4gICAgc2FkZHJlc3NFbmFibGVkOiBmYWxzZVxuICAgIHNhZGRyZXNzOiBcIlwiXG4gICAgYW55QWRkcmVzc0VuYWJsZWQ6IGZhbHNlXG4gICAgYW55QWRkcmVzczogXCJcIlxuICAgIGRpcFNldEVuYWJsZWQ6IGZhbHNlXG4gICAgZGlwU2V0OiBudWxsXG4gICAgc2lwU2V0RW5hYmxlZDogZmFsc2VcbiAgICBzaXBTZXQ6IG51bGxcbiAgICBhbnlTZXRFbmFibGVkOiBmYWxzZVxuICAgIGFueVNldDogbnVsbFxuICAgIHR1cGxlRmlsZUVuYWJsZWQ6IGZhbHNlXG4gICAgdHVwbGVGaWxlOiBudWxsXG4gICAgdHVwbGVEaXJlY3Rpb25FbmFibGVkOiBmYWxzZVxuICAgIHR1cGxlRGlyZWN0aW9uOiBcIlwiXG4gICAgdHVwbGVEZWxpbWl0ZXJFbmFibGVkOiBmYWxzZVxuICAgIHR1cGxlRGVsaW1pdGVyOiBcIlwiXG4gICAgdHVwbGVGaWVsZHNFbmFibGVkOiBmYWxzZVxuICAgIHR1cGxlRmllbGRzOiBcIlwiXG4gICAgZHBvcnRFbmFibGVkOiBmYWxzZVxuICAgIGRwb3J0OiBcIlwiXG4gICAgc3BvcnRFbmFibGVkOiBmYWxzZVxuICAgIHNwb3J0OiBcIlwiXG4gICAgYXBvcnRFbmFibGVkOiBmYWxzZVxuICAgIGFwb3J0OiBcIlwiXG4gICAgZGNjRW5hYmxlZDogZmFsc2VcbiAgICBkY2M6IFtdXG4gICAgc2NjRW5hYmxlZDogZmFsc2VcbiAgICBzY2M6IFtdXG4gICAgcHJvdG9jb2xFbmFibGVkOiB0cnVlXG4gICAgcHJvdG9jb2w6IFwiMC0yNTVcIlxuICAgIGZsYWdzQWxsRW5hYmxlZDogZmFsc2VcbiAgICBmbGFnc0FsbDogXCJcIlxuICAgIGFjdGl2ZVRpbWVFbmFibGVkOiBmYWxzZVxuICAgIGFjdGl2ZVRpbWU6IFwiXCJcbiAgICBhZGRpdGlvbmFsUGFyYW1ldGVyc0VuYWJsZWQ6IGZhbHNlXG4gICAgYWRkaXRpb25hbFBhcmFtZXRlcnM6IFwiXCJcbiAgICBhZGRpdGlvbmFsRXhjbHVzaW9uc0NtZEVuYWJsZWQ6IGZhbHNlXG4gICAgYWRkaXRpb25hbEV4Y2x1c2lvbnNDbWQ6IFwiXCJcbiAgICBmaWVsZHM6IFtcInNJUFwiLCBcImRJUFwiLCBcInNQb3J0XCIsIFwiZFBvcnRcIiwgXCJwcm90b2NvbFwiLCBcInBhY2tldHNcIiwgXCJieXRlc1wiLCBcImZsYWdzXCIsIFwic1RpbWVcIiwgXCJkdXJhdGlvblwiLCBcImVUaW1lXCIsIFwic2Vuc29yXCJdXG4gICAgZmllbGRzT3JkZXI6IF8uY2xvbmUoc2hhcmUucndjdXRGaWVsZHMpXG4gICAgcndzdGF0c0RpcmVjdGlvbjogXCJ0b3BcIlxuICAgIHJ3c3RhdHNNb2RlOiBcImNvdW50XCJcbiAgICByd3N0YXRzQ291bnRNb2RlVmFsdWU6IFwiMTBcIlxuICAgIHJ3c3RhdHNUaHJlc2hvbGRNb2RlVmFsdWU6IFwiXCJcbiAgICByd3N0YXRzUGVyY2VudGFnZU1vZGVWYWx1ZTogXCJcIlxuICAgIHJ3c3RhdHNCaW5UaW1lRW5hYmxlZDogZmFsc2VcbiAgICByd3N0YXRzQmluVGltZTogXCI2MFwiXG4gICAgcndzdGF0c0ZpZWxkczogW11cbiAgICByd3N0YXRzRmllbGRzT3JkZXI6IF8uY2xvbmUoc2hhcmUucndjdXRGaWVsZHMpXG4gICAgcndzdGF0c1ZhbHVlczogW11cbiAgICByd3N0YXRzVmFsdWVzT3JkZXI6IHNoYXJlLnJ3c3RhdHNWYWx1ZXMuY29uY2F0KHNoYXJlLnJ3Y3V0RmllbGRzKVxuICAgIHJ3c3RhdHNQcmltYXJ5VmFsdWU6IFwiXCJcbiAgICByd3N0YXRzQ21kOiBcIlwiXG4gICAgcndjb3VudEJpblNpemVFbmFibGVkOiBmYWxzZVxuICAgIHJ3Y291bnRCaW5TaXplOiBcIlwiXG4gICAgcndjb3VudExvYWRTY2hlbWVFbmFibGVkOiBmYWxzZVxuICAgIHJ3Y291bnRMb2FkU2NoZW1lOiBcIlwiXG4gICAgcndjb3VudFNraXBaZXJvZXM6IHRydWVcbiAgICByd2NvdW50RmllbGRzOiBfLmNsb25lKHNoYXJlLnJ3Y291bnRGaWVsZHMpXG4gICAgcndjb3VudENtZDogXCJcIlxuICAgIGludGVyZmFjZTogXCJjbWRcIlxuICAgIG91dHB1dDogXCJyd2N1dFwiXG4gICAgcHJlc2VudGF0aW9uOiBcInRhYmxlXCJcbiAgICBjaGFydFR5cGU6IFwiTGluZUNoYXJ0XCJcbiAgICBjaGFydEhlaWdodDogNDAwXG4gICAgZXhwYW5kZWRGaWVsZHNldHM6IFtcInRpbWVcIl1cbiAgICBleGVjdXRpbmdJbnRlcnZhbDogMFxuICAgIGV4ZWN1dGluZ0F0OiBudWxsXG4gICAgaXNJbnB1dFN0YWxlOiBmYWxzZVxuICAgIGlzT3V0cHV0U3RhbGU6IGZhbHNlXG4gICAgaXNVVEM6IHRydWVcbiAgICBpc1F1aWNrOiBmYWxzZVxuICAgIGlzTmV3OiB0cnVlXG4gICAgb3duZXJJZDogdXNlcklkXG4gICAgdXBkYXRlZEF0OiBub3dcbiAgICBjcmVhdGVkQXQ6IG5vd1xuICAsIHNoYXJlLnF1ZXJ5QmxhbmtWYWx1ZXMsIHNoYXJlLnF1ZXJ5UmVzZXRWYWx1ZXMpXG4gIGlmIG5vdCBxdWVyeS5uYW1lXG4gICAgcHJlZml4ID0gXCJOZXcgcXVlcnlcIlxuICAgIGNvdW50ID0gc2hhcmUuUXVlcmllcy5maW5kKHsgbmFtZTogeyAkcmVnZXg6IFwiXlwiICsgcHJlZml4LCAkb3B0aW9uczogXCJpXCIgfSB9KS5jb3VudCgpXG4gICAgcXVlcnkubmFtZSA9IHByZWZpeFxuICAgIGlmIGNvdW50XG4gICAgICBxdWVyeS5uYW1lICs9IFwiIChcIiArIGNvdW50ICsgXCIpXCJcbiAgcXVlcnlQcmVTYXZlLmNhbGwoQCwgdXNlcklkLCBxdWVyeSlcblxuc2hhcmUuUXVlcmllcy5iZWZvcmUudXBkYXRlICh1c2VySWQsIHF1ZXJ5LCBmaWVsZE5hbWVzLCBtb2RpZmllciwgb3B0aW9ucykgLT5cbiAgbm93ID0gbmV3IERhdGUoKVxuICBtb2RpZmllci4kc2V0ID0gbW9kaWZpZXIuJHNldCBvciB7fVxuICBtb2RpZmllci4kc2V0LnVwZGF0ZWRBdCA9IG1vZGlmaWVyLiRzZXQudXBkYXRlZEF0IG9yIG5vd1xuICBxdWVyeVByZVNhdmUuY2FsbChALCB1c2VySWQsIG1vZGlmaWVyLiRzZXQpXG5cbnNoYXJlLnF1ZXJ5QmxhbmtWYWx1ZXMgPVxuICByZXN1bHQ6IFwiXCJcbiAgZXJyb3I6IFwiXCJcblxuc2hhcmUucXVlcnlSZXNldFZhbHVlcyA9XG4gIHN0YXJ0UmVjTnVtOiAxXG4gIHNvcnRGaWVsZDogXCJcIlxuICBzb3J0UmV2ZXJzZTogdHJ1ZVxuICBjaGFydEhpZGRlbkZpZWxkczogW11cbiJdfQ==
