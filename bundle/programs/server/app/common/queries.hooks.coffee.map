{"version":3,"sources":["meteor://ðŸ’»app/common/queries.hooks.coffee"],"names":["indexOf","share","Queries","before","update","userId","query","fieldNames","modifier","options","_","intersection","length","$set","isOutputStale","extend","queryBlankValues","after","availableChartTypes","ref","transformedQuery","Transformations","chartType","call","_id"],"mappings":";;;;;;;;;AAAA,IAAAA,OAAA,MAAAA,OAAA;AAAAC,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBC,MAArB,CAA4B,UAACC,MAAD,EAASC,KAAT,EAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,OAAtC;AAC1B,MAAGC,CAAC,CAACC,YAAF,CAAeJ,UAAf,EAA2B,CAAC,QAAD,EAAW,cAAX,EAA2B,aAA3B,EAA0C,WAA1C,EAAuD,aAAvD,EAAsE,QAAtE,EAAgF,aAAhF,CAA3B,EAA2HK,MAA9H;AACEJ,YAAQ,CAACK,IAAT,GAAgBL,QAAQ,CAACK,IAAT,IAAiB,EAAjC;AACAL,YAAQ,CAACK,IAAT,CAAcC,aAAd,GAA8B,IAA9B;AAGD;;AAFD,MAAGJ,CAAC,CAACC,YAAF,CAAeJ,UAAf,EAA2B,CAAC,WAAD,EAAc,QAAd,EAAwB,cAAxB,CAA3B,EAAoEK,MAAvE;AACEJ,YAAQ,CAACK,IAAT,GAAgBL,QAAQ,CAACK,IAAT,IAAiB,EAAjC;AAIA,WAHAH,CAAC,CAACK,MAAF,CAASP,QAAQ,CAACK,IAAlB,EAAwBZ,KAAK,CAACe,gBAA9B,CAGA;AACD;AAVH;AAQAf,KAAK,CAACC,OAAN,CAAce,KAAd,CAAoBb,MAApB,CAA2B,UAACC,MAAD,EAASC,KAAT,EAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,OAAtC;AACzB,MAAAS,mBAAA,EAAAC,GAAA,EAAAC,gBAAA;;AAAA,MAAGV,CAAC,CAACC,YAAF,CAAeJ,UAAf,EAA2B,CAAC,QAAD,CAA3B,EAAuCK,MAA1C;AACEQ,oBAAA,GAAmBnB,KAAK,CAACoB,eAAN,CAAsBf,KAAtB,CAA4BA,KAA5B,CAAnB;AACAY,uBAAA,GAAsBE,gBAAgB,CAACF,mBAAjB,EAAtB;;AACA,QAAAC,GAAA,GAAGb,KAAK,CAACgB,SAAT,EAAGtB,OAAA,CAAAuB,IAAA,CAAuBL,mBAAvB,EAAAC,GAAA,KAAH;AAOE,aANAlB,KAAK,CAACC,OAAN,CAAcE,MAAd,CAAqBE,KAAK,CAACkB,GAA3B,EAAgC;AAACX,YAAA,EAAM;AAACS,mBAAA,EAAWJ,mBAAoB,GAApB,IAA0B;AAAtC;AAAP,OAAhC,CAMA;AAVJ;AAgBC;AAjBH,G","file":"/common/queries.hooks.coffee","sourcesContent":["share.Queries.before.update (userId, query, fieldNames, modifier, options) ->\n  if _.intersection(fieldNames, [\"output\", \"presentation\", \"startRecNum\", \"sortField\", \"sortReverse\", \"fields\", \"fieldsOrder\"]).length\n    modifier.$set = modifier.$set or {}\n    modifier.$set.isOutputStale = true\n  if _.intersection(fieldNames, [\"interface\", \"output\", \"presentation\"]).length\n    modifier.$set = modifier.$set or {}\n    _.extend(modifier.$set, share.queryBlankValues)\n\nshare.Queries.after.update (userId, query, fieldNames, modifier, options) ->\n  if _.intersection(fieldNames, [\"output\"]).length\n    transformedQuery = share.Transformations.query(query)\n    availableChartTypes = transformedQuery.availableChartTypes()\n    if query.chartType not in availableChartTypes\n      share.Queries.update(query._id, {$set: {chartType: availableChartTypes[0] or \"\"}})\n"]}