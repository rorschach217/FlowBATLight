{"version":3,"sources":["meteor://ðŸ’»app/common/ipsets.defaults.coffee"],"names":["ipsetPreSave","userId","changes","share","IPSets","before","insert","ipset","count","now","prefix","_id","Random","id","Date","_","defaults","name","note","contents","isOutputStale","isNew","ownerId","updatedAt","createdAt","find","$regex","$options","call","update","fieldNames","modifier","options","$set"],"mappings":";;;;;;;;;AAAA,IAAAA,YAAA;;AAAAA,YAAA,GAAe,UAACC,MAAD,EAASC,OAAT,IAAf;;AAEAC,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBC,MAApB,CAA2B,UAACL,MAAD,EAASM,KAAT;AACzB,MAAAC,KAAA,EAAAC,GAAA,EAAAC,MAAA;AAAAH,OAAK,CAACI,GAAN,GAAYJ,KAAK,CAACI,GAAN,IAAaC,MAAM,CAACC,EAAP,EAAzB;AACAJ,KAAA,GAAM,IAAIK,IAAJ,EAAN;;AACAC,GAAC,CAACC,QAAF,CAAWT,KAAX,EACE;AAAAU,QAAA,EAAM,EAAN;AACAC,QAAA,EAAM,EADN;AAEAC,YAAA,EAAU,EAFV;AAGAC,iBAAA,EAAe,IAHf;AAIAC,SAAA,EAAO,IAJP;AAKAC,WAAA,EAASrB,MALT;AAMAsB,aAAA,EAAWd,GANX;AAOAe,aAAA,EAAWf;AAPX,GADF;;AAUA,MAAG,CAAIF,KAAK,CAACU,IAAb;AACEP,UAAA,GAAS,YAAT;AACAF,SAAA,GAAQL,KAAK,CAACC,MAAN,CAAaqB,IAAb,CAAkB;AAAER,UAAA,EAAM;AAAES,cAAA,EAAQ,MAAMhB,MAAhB;AAAwBiB,gBAAA,EAAU;AAAlC;AAAR,KAAlB,EAAqEnB,KAArE,EAAR;AACAD,SAAK,CAACU,IAAN,GAAaP,MAAb;;AACA,QAAGF,KAAH;AACED,WAAK,CAACU,IAAN,IAAc,OAAOT,KAAP,GAAe,GAA7B;AALJ;AAeC;;AACD,SAVAR,YAAY,CAAC4B,IAAb,CAAkB,IAAlB,EAAqB3B,MAArB,EAA6BM,KAA7B,CAUA;AA7BF;AAqBAJ,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBwB,MAApB,CAA2B,UAAC5B,MAAD,EAASM,KAAT,EAAgBuB,UAAhB,EAA4BC,QAA5B,EAAsCC,OAAtC;AACzB,MAAAvB,GAAA;AAAAA,KAAA,GAAM,IAAIK,IAAJ,EAAN;AACAiB,UAAQ,CAACE,IAAT,GAAgBF,QAAQ,CAACE,IAAT,IAAiB,EAAjC;AACAF,UAAQ,CAACE,IAAT,CAAcV,SAAd,GAA0BQ,QAAQ,CAACE,IAAT,CAAcV,SAAd,IAA2Bd,GAArD;AAaA,SAZAT,YAAY,CAAC4B,IAAb,CAAkB,IAAlB,EAAqB3B,MAArB,EAA6B8B,QAAQ,CAACE,IAAtC,CAYA;AAhBF,G","file":"/common/ipsets.defaults.coffee","sourcesContent":["ipsetPreSave = (userId, changes) ->\n\nshare.IPSets.before.insert (userId, ipset) ->\n  ipset._id = ipset._id || Random.id()\n  now = new Date()\n  _.defaults(ipset,\n    name: \"\"\n    note: \"\"\n    contents: \"\"\n    isOutputStale: true\n    isNew: true\n    ownerId: userId\n    updatedAt: now\n    createdAt: now\n  )\n  if not ipset.name\n    prefix = \"New IP Set\"\n    count = share.IPSets.find({ name: { $regex: \"^\" + prefix, $options: \"i\" } }).count()\n    ipset.name = prefix\n    if count\n      ipset.name += \" (\" + count + \")\"\n  ipsetPreSave.call(@, userId, ipset)\n\nshare.IPSets.before.update (userId, ipset, fieldNames, modifier, options) ->\n  now = new Date()\n  modifier.$set = modifier.$set or {}\n  modifier.$set.updatedAt = modifier.$set.updatedAt or now\n  ipsetPreSave.call(@, userId, modifier.$set)\n"]}